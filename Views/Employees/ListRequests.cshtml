@model EmployeeLeaveRequestsViewModel

@{
    ViewData["Title"] = "List Leave Requests";
}

<div class="card">
    <div class="card-header">
        <h4>Leave Allocations</h4>
    </div>
    <ul class="list-group list-group-flush">
        @foreach (var item in Model.LeaveAllocations)
        {
            <li class="list-group-item">
                <div class="row">
                    <div class="col"><h6>@item.LeaveType.Name</h6></div>
                    <div class="col"><span class="lm-notification">Allocated Days <span class="badge bg-secondary">@item.LeaveType.DefaultDays</span></span></div>
                    <div class="col"><span class="lm-notification">Remaining Days <span class="badge bg-secondary">@item.NumberOfDays</span></span></div>
                </div>
            </li>
        }
    </ul>
</div>
<br />
<hr />
<h3>Current requests</h3>
<table class="table tableGrid" width="100%">
    <thead>
        <tr>
            <th width="30%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].LeaveTypeName)
            </th>
            <th width="15%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].StartDate)
            </th>
            <th width="15%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].EndDate)
            </th>
            <th width="5%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].TotalLeaveDays)
            </th>
            <th width="15%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].RequestDate)
            </th>
            <th width="10%">
                @Html.DisplayNameFor(model => model.LeaveRequests[0].Approved)
            </th>
            <th width="10%"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.LeaveRequests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LeaveTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalLeaveDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestDate)
                </td>
                <td>
                    @if(item.Approved?.ToUpper() == "PENDING")
                    {
                        <span class="lm-warning">@Html.DisplayFor(modelItem => item.Approved)</span>
                    }
                    else if (item.Approved?.ToUpper() == "APPROVED")
                    {
                        <span class="lm-notification">@Html.DisplayFor(modelItem => item.Approved)</span>
                    }
                    else // is rejected
                    {
                        <span class="lm-danger">@Html.DisplayFor(modelItem => item.Approved)</span>
                    }
                    
                </td>
                <td>
                    @if (item.Approved?.ToUpper() == "PENDING") // Only pending leave requests can be cancelled
                    {
                        <a asp-action="CancelLeaveRequest" class="btn btn-danger btn-sm" asp-route-id="@item.Id">Cancel</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>